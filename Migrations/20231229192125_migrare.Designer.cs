// <auto-generated />
using System;
using Gym_web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gym_web.Migrations
{
    [DbContext(typeof(Gym_webContext))]
    [Migration("20231229192125_migrare")]
    partial class migrare
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Gym_web.Models.Trainer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Trainer");
                });

            modelBuilder.Entity("Gym_web.Models.Orar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Zi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Orar");
                });

            modelBuilder.Entity("Gym_web.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localitate")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Nume")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prenume")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Gym_web.Models.Programare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("DataProgramare")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.Property<int?>("ServiciuID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("ServiciuID");

                    b.ToTable("Programare");
                });

            modelBuilder.Entity("Gym_web.Models.Serviciu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("TrainerID")
                        .HasColumnType("int");

                    b.Property<int?>("OrarID")
                        .HasColumnType("int");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("Titlu")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ID");

                    b.HasIndex("TrainerID");

                    b.HasIndex("OrarID");

                    b.ToTable("Serviciu");
                });

            modelBuilder.Entity("Gym_web.Models.Specialitate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("NumeSpecialitate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Specialitate");
                });

            modelBuilder.Entity("Gym_web.Models.SpecialitateServiciu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("ServiciuID")
                        .HasColumnType("int");

                    b.Property<int>("SpecialitateID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ServiciuID");

                    b.HasIndex("SpecialitateID");

                    b.ToTable("SpecialitateServiciu");
                });

            modelBuilder.Entity("Gym_web.Models.Programare", b =>
                {
                    b.HasOne("Gym_web.Models.Client", "Client")
                        .WithMany("Programari")
                        .HasForeignKey("ClientID");

                    b.HasOne("Gym_web.Models.Serviciu", "Serviciu")
                        .WithMany()
                        .HasForeignKey("ServiciuID");

                    b.Navigation("Client");

                    b.Navigation("Serviciu");
                });

            modelBuilder.Entity("Gym_web.Models.Serviciu", b =>
                {
                    b.HasOne("Gym_web.Models.Trainer", "Trainer")
                        .WithMany("Servicii")
                        .HasForeignKey("TrainerID");

                    b.HasOne("Gym_web.Models.Orar", "Orar")
                        .WithMany("Servicii")
                        .HasForeignKey("OrarID");

                    b.Navigation("Trainer");

                    b.Navigation("Orar");
                });

            modelBuilder.Entity("Gym_web.Models.SpecialitateServiciu", b =>
                {
                    b.HasOne("Gym_web.Models.Serviciu", "Serviciu")
                        .WithMany("SpecialitatiServiciu")
                        .HasForeignKey("ServiciuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gym_web.Models.Specialitate", "Specialitate")
                        .WithMany("SpecialitatiServiciu")
                        .HasForeignKey("SpecialitateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Serviciu");

                    b.Navigation("Specialitate");
                });

            modelBuilder.Entity("Gym_web.Models.Trainer", b =>
                {
                    b.Navigation("Servicii");
                });

            modelBuilder.Entity("Gym_web.Models.Orar", b =>
                {
                    b.Navigation("Servicii");
                });

            modelBuilder.Entity("Gym_web.Models.Client", b =>
                {
                    b.Navigation("Programari");
                });

            modelBuilder.Entity("Gym_web.Models.Serviciu", b =>
                {
                    b.Navigation("SpecialitatiServiciu");
                });

            modelBuilder.Entity("Gym_web.Models.Specialitate", b =>
                {
                    b.Navigation("SpecialitatiServiciu");
                });
#pragma warning restore 612, 618
        }
    }
}
